[build-system]
requires = ["setuptools >= 61.0", "pybind11 >= 2.12", "delvewheel >= 1.10"]
build-backend = "setuptools.build_meta"

[project]
name = "piqtree"
dependencies = ["cogent3>=2025.5.8a2", "pyyaml", "requests"]
requires-python = ">=3.11, <3.14"

authors = [{name="Gavin Huttley"}, {name="Robert McArthur"}, {name="Bui Quang Minh "}, {name="Richard Morris"}, {name="Thomas Wong"}]
description="Python bindings for IQTree"
readme = "README.md"
dynamic = ["version"]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",

    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",

    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",

    "Natural Language :: English",

    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",

    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",

    "Typing :: Typed"
]

[project.urls]
Repository = "https://github.com/cogent3/piqtree"
Documentation = "https://piqtree.readthedocs.io"


[project.optional-dependencies]
dev = ["cibuildwheel", "pybind11", "scriv", "piqtree[test]", "piqtree[lint]", "piqtree[typing]"]
test = ["pytest", "pytest-cov", "nox"]
lint = ["ruff==0.11.9"]
typing = ["mypy==1.15.0", "piqtree[stubs]", "piqtree[test]"]
stubs = ["types-PyYAML", "types-requests"]
extra = ["cogent3[extra]"]
doc = [
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-jupyter",
    "pymdown-extensions",
    "jupytext",
    "piqtree[test]",
    "cogent3[extra]",
    "diverse-seq",
    "jupyter",
    "ipywidgets"
    ]

[project.entry-points."cogent3.app"]
piqtree_phylo = "piqtree._app:piqtree_phylo"
piqtree_fit = "piqtree._app:piqtree_fit"
piqtree_random_trees = "piqtree._app:piqtree_random_trees"
piqtree_jc_dists = "piqtree._app:piqtree_jc_dists"
piqtree_nj = "piqtree._app:piqtree_nj"
piqtree_mfinder = "piqtree._app:piqtree_mfinder"

[project.entry-points."cogent3.hook"]
quick_tree = "piqtree._app:piqtree_nj"

[tool.setuptools.dynamic]
version = {attr = "piqtree.__version__"}

[tool.ruff]
exclude = [
    "iqtree2",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
ignore = ["EXE002", "FA100", "E501", "PLR0913", "PLR2004", "S603", "S607", "D"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "N802", # allow non snake_case function names for fixtures
    "N803", # allow use of fixture constants
    "SLF001", # private member access is useful for testing
    "FBT001", # allow bool pos args for parameterisation
    "D", # don't require docstrings
]
"docs/**/*.py" = [
    "B018",
    "E402",
    "ERA001",
    "INP001"
]
"noxfile.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803",
    "D"
]
"src/piqtree/_app/__init__.py" = [
    "N801", # apps follow function naming convention
]
"src/piqtree/__init__.py" = [
    "E402", # handle DLLs before imports
    "PTH118", # os operations for DLL path
    "PTH120", # os operations for DLL path
]
"src/piqtree/model/_substitution_model.py" = ["N815"] # use IQ-TREE naming scheme

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.scriv]
format="md"
categories=["Contributors", "ENH", "BUG", "DOC", "Deprecations", "Discontinued"]
output_file="changelog.md"
version = "literal: src/piqtree/__init__.py: __version__"
skip_fragments="README.*"
new_fragment_template="file: changelog.d/templates/new.md.j2"
entry_title_template="file: changelog.d/templates/title.md.j2"

[[tool.mypy.overrides]]
module = ['cogent3.*', "_piqtree"]
ignore_missing_imports = true