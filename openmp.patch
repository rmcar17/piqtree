diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4b33b85e9..12556f918 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -60,7 +60,7 @@
 #
 #
 
-cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.9)
 set(CMAKE_LEGACY_CYGWIN_WIN32 0)
 
 set(GCC_MIN_VERSION "4.8")
@@ -455,30 +455,6 @@ if (NOT IQTREE_FLAGS MATCHES "single")
         endif()
     endif()
 
-    if(CLANG AND APPLE)
-    	if(OSX_NATIVE_ARCHITECTURE STREQUAL "arm64")
-    		link_directories(${PROJECT_SOURCE_DIR}/libmac_m1)
-            LIST(APPEND STATIC_LIBS "${PROJECT_SOURCE_DIR}/libmac_m1/libomp.a" "${PROJECT_SOURCE_DIR}/libmac_m1/libz.a")
-    	else()
-            link_directories(${PROJECT_SOURCE_DIR}/libmac)
-            LIST(APPEND STATIC_LIBS "${PROJECT_SOURCE_DIR}/libmac/libomp.a" "${PROJECT_SOURCE_DIR}/libmac/libz.a")
-      endif()
-    elseif (UNIX AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD")
-      if (__ARM_NEON)
-        link_directories(${PROJECT_SOURCE_DIR}/liblinux_arm)
-        LIST(APPEND STATIC_LIBS "${PROJECT_SOURCE_DIR}/liblinux_arm/libomp.a" "${PROJECT_SOURCE_DIR}/liblinux_arm/libz.a")
-      else()
-        link_directories(${PROJECT_SOURCE_DIR}/lib)
-        LIST(APPEND STATIC_LIBS "${PROJECT_SOURCE_DIR}/lib/libomp.a" "${PROJECT_SOURCE_DIR}/lib/libz.a")
-      endif()
-    elseif (WIN32)
-        if (BINARY32)
-            link_directories(${PROJECT_SOURCE_DIR}/lib32)
-        else()
-            link_directories(${PROJECT_SOURCE_DIR}/lib)
-        endif()
-    endif()
-
     if (VCC)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /openmp")
         include_directories("${PROJECT_SOURCE_DIR}/pll") # for PThreads headers
@@ -505,7 +481,6 @@ if (NOT IQTREE_FLAGS MATCHES "single")
             #The problem here is that LLVM installs either 64 bit or 32 bit libraries, but not both.
             #Though perhaps in debug builds this should be libiomp5md.lib
             set (LLVM_DIR "C:\\Projects\\LLVM_10")
-            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LIBPATH:${LLVM_DIR}\\lib libomp.lib")
 
             #Also need to ensure libomp.dll is in the path (or copied into the output directory).
             #(You want the one in ${LLVM_DIR}\\bin
@@ -819,6 +794,48 @@ if (USE_CMAPLE STREQUAL "ON")
 	)
 endif()
 
+if (NOT IQTREE_FLAGS MATCHES "single")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fopenmp")
+    if(CMAKE_C_COMPILER_ID MATCHES "Clang")
+        set(OpenMP_C "${CMAKE_C_COMPILER}")
+        set(OpenMP_C_FLAGS "-fopenmp=libomp -Wno-unused-command-line-argument")
+        set(OpenMP_C_LIB_NAMES "libomp" "libgomp" "libiomp5")
+        set(OpenMP_libomp_LIBRARY ${OpenMP_C_LIB_NAMES})
+        set(OpenMP_libgomp_LIBRARY ${OpenMP_C_LIB_NAMES})
+        set(OpenMP_libiomp5_LIBRARY ${OpenMP_C_LIB_NAMES})
+    endif()
+    if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+      set(OpenMP_CXX "${CMAKE_CXX_COMPILER}")
+      set(OpenMP_CXX_FLAGS "-fopenmp=libomp -Wno-unused-command-line-argument")
+      set(OpenMP_CXX_LIB_NAMES "libomp" "libgomp" "libiomp5")
+      set(OpenMP_libomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
+      set(OpenMP_libgomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
+      set(OpenMP_libiomp5_LIBRARY ${OpenMP_CXX_LIB_NAMES})
+    endif()
+
+    find_package(OpenMP)
+
+    if (OPENMP_FOUND)
+        # Add OpenMP flags to compiler options
+        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
+        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
+
+        # Ensure the OpenMP runtime (libgomp or libomp) is linked with the static library
+        target_link_libraries(iqtree2 OpenMP::OpenMP_CXX omp)  # Link OpenMP runtime (libomp)
+
+        if (USE_CMAPLE STREQUAL "ON")
+            target_link_libraries(iqtree2-aa OpenMP::OpenMP_CXX omp)  # Link OpenMP runtime (libomp)
+        endif()
+
+        message("Set OpenMP flags and linked OpenMP runtime (libomp)")
+    else()
+        message(WARNING "OpenMP not found, skipping OpenMP setup.")
+    endif()
+endif()
+
+
 if(Backtrace_FOUND)
   include_directories(${Backtrace_INCLUDE_DIR})
   target_link_libraries(iqtree2 ${Backtrace_LIBRARY})
@@ -878,35 +895,9 @@ endif()
 
 set(THREAD_LIB "")
 if (NOT IQTREE_FLAGS MATCHES "single")
-    if (MSVC)
-        if (BINARY32)
-            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LIBPATH:${PROJECT_SOURCE_DIR}/lib32")
-            set(THREAD_LIB "pthreadVC2")
-        else()
-            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LIBPATH:${PROJECT_SOURCE_DIR}/lib")
-            set(THREAD_LIB "pthreadVC2")
-        endif()
-    elseif(CLANG AND WIN32)
-        if (BINARY32)
-            target_link_libraries(iqtree2 ${PROJECT_SOURCE_DIR}/lib32/libiomp5md.dll)
-            LIST(APPEND STATIC_LIBS "${PROJECT_SOURCE_DIR}/lib32/libiomp5md.dll")
-            if (USE_CMAPLE STREQUAL "ON")
-            	target_link_libraries(iqtree2-aa ${PROJECT_SOURCE_DIR}/lib32/libiomp5md.dll)
-            endif()
-        else()
-            target_link_libraries(iqtree2 ${PROJECT_SOURCE_DIR}/lib/libiomp5md.dll)
-            LIST(APPEND STATIC_LIBS "${PROJECT_SOURCE_DIR}/lib/libiomp5md.dll")
-            if (USE_CMAPLE STREQUAL "ON")
-            	target_link_libraries(iqtree2-aa ${PROJECT_SOURCE_DIR}/lib/libiomp5md.dll)
-            endif()
-        endif()
-#        set(THREAD_LIB "ompstatic")
-    endif()
-
     if (CLANG AND BINARY32)
         set (ATOMIC_LIB "atomic")
     endif()
-
 endif()
 
 # basic linking librararies
@@ -1065,26 +1056,6 @@ if (WIN32)
     if (USE_CMAPLE STREQUAL "ON")
     	install (FILES "${BINARY_DIR}/iqtree2-aa${EXE_SUFFIX}-click.exe" DESTINATION bin)
     endif()
-    if (NOT IQTREE_FLAGS MATCHES "single" AND MSVC)
-        if (BINARY32)
-            install(FILES  "${PROJECT_SOURCE_DIR}/lib32/pthreadVC2.dll" DESTINATION bin)
-            install(FILES  "${PROJECT_SOURCE_DIR}/lib32/libiomp5md.dll" DESTINATION bin)
-        else()
-            install(FILES  "${PROJECT_SOURCE_DIR}/lib/pthreadVC2.dll" DESTINATION bin)
-            install(FILES  "${PROJECT_SOURCE_DIR}/lib/libiomp5md.dll" DESTINATION bin)
-        endif()
-#       install(FILES  "${PROJECT_SOURCE_DIR}/lib/pthreadGC2.dll" DESTINATION bin)
-#       install(FILES  "${PROJECT_SOURCE_DIR}/lib/pthreadGC2_64.dll" DESTINATION bin)
-    endif()
-
-    if (NOT IQTREE_FLAGS MATCHES "single" AND CLANG)
-        if (BINARY32)
-            install(FILES  "${PROJECT_SOURCE_DIR}/lib32/libiomp5md.dll" DESTINATION bin)
-        else()
-            install(FILES  "${PROJECT_SOURCE_DIR}/lib/libiomp5md.dll" DESTINATION bin)
-        endif()
-    endif()
-
 endif()
 
 ##############################################################
